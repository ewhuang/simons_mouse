For any gene-GO edge, the weight is computed as follows:
go_weight = max(log(lamb * max_go_size / curr_go_size), 1.0)

Runs 1-6 have identical networks and clusterings for the network without GO.

Run 1:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
lambda = 1.0
Number of Clusters: 20

Run 2:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
lambda = 0.9
Number of Clusters: 20

Run 3:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
lambda = 0.8
Number of Clusters: 20

Run 4:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
lambda = 0.7
Number of Clusters: 20

Run 5:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
lambda = 0.6
Number of Clusters: 20

Run 6:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
lambda = 0.5
Number of Clusters: 20

Run 7:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
Top 1 million gene-GO edges in predicted_go_edges.txt
All edge weights = 1.0, lambda irrelevant.
Number of Clusters: 20

Run 8:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
Top 200,000 gene-GO edges in predicted_go_edges.txt
All edge weights = 1.0, lambda irrelevant.
Number of Clusters: 20

Run 9:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
Top 200,000 gene-GO edges in predicted_go_edges.txt
lambda = 1.0
Number of Clusters: 20

Run 10:
1% of network
Temperature = 1
MIN_GO_SIZE = 10
MAX_GO_SIZE = 1000
Top 200,000 gene-GO edges in predicted_go_edges.txt
lambda = 0.7
Number of Clusters: 20